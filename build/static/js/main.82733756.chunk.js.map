{"version":3,"sources":["api.js","formCard.js","DisplayCard.js","App.js","index.js"],"names":["API_URL","process","allLogEntries","a","axios","get","response","data","console","log","LogForm","location","onClose","getEntries","useForm","register","handleSubmit","control","useFormState","isSubmitted","isSubmitSuccessful","currentDate","Date","now","toISOString","split","onSubmit","form","FormData","key","append","latitude","longitude","set","image","post","then","res","catch","err","encType","className","required","type","placeholder","rows","accept","id","value","max","displayCard","src","alt","title","description","comment","map","num","checked","rating","readOnly","disabled","htmlFor","visitDate","toString","slice","navControlStyle","right","top","App","useState","logEntries","setLogEntries","showPopup","togglePopup","addEntryLocation","setAddEntryLocation","zoom","viewport","setViewport","useEffect","width","height","mapStyle","doubleClickZoom","maxZoom","onViewportChange","nextViewport","onDblClick","e","lngLat","keyboard","style","positionOptions","enableHighAccuracy","trackUserLocation","auto","onClick","_id","transform","position","d","fill","closeButton","closeOnClick","dynamicPosition","anchor","DisplayCard","stroke","strokeWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82733756.chunk.js","sourcesContent":["import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API;\n\n// api call to get all saved entries from database\nexport async function allLogEntries() {\n  try {\n    const response = await axios.get(`${API_URL}/api/logs`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React from \"react\";\nimport { useForm, useFormState } from \"react-hook-form\";\nimport axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API;\n\n// react-hook-form components controller\nconst LogForm = ({ location, onClose, getEntries }) => {\n  const { register, handleSubmit, control } = useForm();\n  const { isSubmitted, isSubmitSuccessful } = useFormState({\n    control,\n  });\n\n  // react-hook-form function to be called on submit\n  const onSubmit = (data) => {\n    const form = new FormData();\n    form.append(\"latitude\", location.latitude);\n    form.append(\"longitude\", location.longitude);\n\n    for (const key in data) {\n      form.append(key, data[key]);\n    }\n\n    form.set(\"image\", data.image[0]);\n\n    axios\n      .post(`${API_URL}/api/logs`, form)\n      .then((res) => {\n        onClose();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // current date\n  const currentDate = new Date(Date.now()).toISOString().split(\"T\")[0];\n\n  return (\n    //   react-hook-form form instance\n    <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n      <input\n        className=\"display-form start\"\n        {...register(\"title\", { required: true })}\n        type=\"text\"\n        placeholder=\"Title\"\n      />\n      <textarea\n        className=\"display-form\"\n        type=\"text\"\n        {...register(\"description\")}\n        placeholder=\"Description\"\n        rows={3}\n      />\n      <textarea\n        className=\"display-form\"\n        {...register(\"comment\")}\n        placeholder=\"Comment\"\n        rows={3}\n      />\n      <input\n        className=\"display-form\"\n        type=\"file\"\n        accept=\"image/*\"\n        {...register(\"image\", { required: true })}\n      ></input>\n      <select\n        className=\"display-form\"\n        placeholder=\"Rate your experience\"\n        {...register(\"rating\", { required: true })}\n        id=\"rate\"\n      >\n        <option value=\"\">--rate your experience--</option>\n        <option value=\"1\">😡 Poor</option>\n        <option value=\"2\">😏 Average</option>\n        <option value=\"3\">🙂 Good</option>\n        <option value=\"4\">😊 Great</option>\n        <option value=\"5\">😁 Excellent</option>\n      </select>\n      <input\n        className=\"display-form\"\n        type=\"Date\"\n        max={currentDate}\n        value={currentDate}\n        {...register(\"visitDate\", { required: true })}\n      />\n      {isSubmitted && isSubmitSuccessful ? (\n        <div className=\"lds-dual-ring\"></div>\n      ) : (\n        <input className=\"display-form\" type=\"submit\"></input>\n      )}\n    </form>\n  );\n};\n\nexport default LogForm;\n","import * as React from \"react\";\n\nconst displayCard = ({ location }) => {\n  return (\n    <div className=\"display-card start\">\n      <div className=\"display-image\">\n        <img src={location.image} alt=\"location-header\"></img>\n      </div>\n\n      <h3>{location.title}</h3>\n      <fieldset>\n        <legend>Description</legend>\n        <small>{location.description}</small>\n      </fieldset>\n      <fieldset>\n        <legend>Comment</legend>\n        <small>{location.comment}</small>\n      </fieldset>\n      <fieldset>\n        <legend>Rating</legend>\n        <div className=\"display-rated\">\n          {[5, 4, 3, 2, 1].map((num) => {\n            return (\n              <React.Fragment key={num}>\n                <input\n                  checked={location.rating === num ? true : false}\n                  id={num}\n                  type=\"radio\"\n                  value={num}\n                  readOnly\n                />\n                <label disabled htmlFor={num}></label>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </fieldset>\n      <fieldset>\n        <legend>Visit Date</legend>\n        <small>{new Date(location.visitDate).toString().slice(0, 16)}</small>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default displayCard;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n// eslint-disable-next-line\nimport ReactMapGL, {\n  NavigationControl,\n  Marker,\n  Popup,\n  GeolocateControl,\n} from \"!react-map-gl\";\n\n// import mapboxgl from \"mapbox-gl/dist/mapbox-gl-csp\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import MapboxWorker from \"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\";\n\nimport { allLogEntries } from \"./api\";\nimport LogForm from \"./formCard\";\nimport DisplayCard from \"./DisplayCard\";\n\n// mapboxgl.workerClass = MapboxWorker;\n\n// @ts-ignore\n\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\n// mapboxgl.workerClass =\n//   require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst navControlStyle = {\n  right: 10,\n  top: 10,\n};\n\nfunction App() {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, togglePopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [viewport, setViewport] = useState({\n    latitude: 9,\n    longitude: 7,\n    zoom: 6,\n  });\n\n  // importing of all saved entries\n  const getEntries = async () => {\n    const logEntries = await allLogEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  // setting the current longitude and latitude\n  const showAddMarkerPopup = (e) => {\n    const [longitude, latitude] = e.lngLat;\n    setAddEntryLocation({\n      longitude,\n      latitude,\n    });\n  };\n\n  // map function for controlling the gps location\n  const geolocateControlStyle = {\n    right: 10,\n    top: 10,\n  };\n\n  // main map\n  return (\n    //   rendering of the map\n    <ReactMapGL\n      {...viewport}\n      width=\"100vw\"\n      height=\"100vh\"\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n      doubleClickZoom={false}\n      maxZoom={16}\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\n      onDblClick={showAddMarkerPopup}\n      keyboard={false}\n    >\n      <NavigationControl style={navControlStyle} />\n      <GeolocateControl\n        style={geolocateControlStyle}\n        positionOptions={{ enableHighAccuracy: true }}\n        trackUserLocation={true}\n        auto\n      />\n\n      {logEntries.map((location) => {\n        return (\n          <>\n            <Marker\n              key={location._id}\n              latitude={location.latitude}\n              longitude={location.longitude}\n            >\n              <div\n                onClick={() =>\n                  togglePopup({\n                    [location._id]: true,\n                  })\n                }\n              >\n                <svg\n                  style={{\n                    transform: \"translate(-50%, -100% )\",\n                  }}\n                  height=\"24\"\n                  width=\"24\"\n                  z-index=\"-1\"\n                  position=\"absolute\"\n                >\n                  <path\n                    d=\"m12 0c-4.4183 2.3685e-15 -8 3.5817-8 8 0 1.421 0.3816 2.75 1.0312 3.906 0.1079 0.192 0.221 0.381 0.3438 0.563l6.625 11.531 6.625-11.531c0.102-0.151 0.19-0.311 0.281-0.469l0.063-0.094c0.649-1.156 1.031-2.485 1.031-3.906 0-4.4183-3.582-8-8-8zm0 4c2.209 0 4 1.7909 4 4 0 2.209-1.791 4-4 4-2.2091 0-4-1.791-4-4 0-2.2091 1.7909-4 4-4z\"\n                    fill=\"#e74c3c\"\n                  />\n                  <path\n                    d=\"m12 3c-2.7614 0-5 2.2386-5 5 0 2.761 2.2386 5 5 5 2.761 0 5-2.239 5-5 0-2.7614-2.239-5-5-5zm0 2c1.657 0 3 1.3431 3 3s-1.343 3-3 3-3-1.3431-3-3 1.343-3 3-3z\"\n                    fill=\"#c0392b\"\n                  />\n                </svg>\n              </div>\n            </Marker>\n\n            {/* function to display the location details */}\n            {showPopup[location._id] ? (\n              <Popup\n                latitude={location.latitude}\n                longitude={location.longitude}\n                closeButton={true}\n                closeOnClick={true}\n                dynamicPosition={true}\n                onClose={() => togglePopup({})}\n                anchor=\"top\"\n              >\n                <DisplayCard location={location} />\n              </Popup>\n            ) : null}\n\n            {/* marker to  indicate new location to be saved */}\n            {addEntryLocation ? (\n              <>\n                <Marker\n                  key={location._id}\n                  latitude={addEntryLocation.latitude}\n                  longitude={addEntryLocation.longitude}\n                >\n                  <div>\n                    <svg\n                      style={{\n                        transform: \"translate(-50%, -100% )\",\n                      }}\n                      height=\"24\"\n                      width=\"24\"\n                      stroke=\"black\"\n                      strokeWidth=\".2\"\n                    >\n                      <path\n                        d=\"m12 0c-4.4183 2.3685e-15 -8 3.5817-8 8 0 1.421 0.3816 2.75 1.0312 3.906 0.1079 0.192 0.221 0.381 0.3438 0.563l6.625 11.531 6.625-11.531c0.102-0.151 0.19-0.311 0.281-0.469l0.063-0.094c0.649-1.156 1.031-2.485 1.031-3.906 0-4.4183-3.582-8-8-8zm0 4c2.209 0 4 1.7909 4 4 0 2.209-1.791 4-4 4-2.2091 0-4-1.791-4-4 0-2.2091 1.7909-4 4-4z\"\n                        fill=\"yellow\"\n                      />\n                      <path\n                        d=\"m12 3c-2.7614 0-5 2.2386-5 5 0 2.761 2.2386 5 5 5 2.761 0 5-2.239 5-5 0-2.7614-2.239-5-5-5zm0 2c1.657 0 3 1.3431 3 3s-1.343 3-3 3-3-1.3431-3-3 1.343-3 3-3z\"\n                        fill=\"#c0392b\"\n                      />\n                    </svg>\n                  </div>\n                </Marker>\n                <Popup\n                  latitude={addEntryLocation.latitude}\n                  longitude={addEntryLocation.longitude}\n                  closeButton={true}\n                  closeOnClick={false}\n                  dynamicPosition={true}\n                  onClose={() => setAddEntryLocation(false)}\n                  anchor=\"top\"\n                >\n                  <div className=\"display-card\">\n                    <LogForm\n                      onClose={() => {\n                        setAddEntryLocation(null);\n                        getEntries();\n                      }}\n                      location={addEntryLocation}\n                    />\n                  </div>\n                </Popup>\n              </>\n            ) : null}\n          </>\n        );\n      })}\n    </ReactMapGL>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}